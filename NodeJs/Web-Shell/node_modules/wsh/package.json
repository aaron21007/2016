{
  "_args": [
    [
      {
        "raw": "wsh",
        "scope": null,
        "escapedName": "wsh",
        "name": "wsh",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/home/krytus/Documents/Git_Proyects/NodeJs/Web-Shell"
    ]
  ],
  "_from": "wsh@latest",
  "_id": "wsh@0.1.4",
  "_inCache": true,
  "_location": "/wsh",
  "_phantomChildren": {},
  "_requested": {
    "raw": "wsh",
    "scope": null,
    "escapedName": "wsh",
    "name": "wsh",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/wsh/-/wsh-0.1.4.tgz",
  "_shasum": "d787e59d10c6121129e12aad42f56202b66fbf8d",
  "_shrinkwrap": null,
  "_spec": "wsh",
  "_where": "/home/krytus/Documents/Git_Proyects/NodeJs/Web-Shell",
  "author": {
    "name": "Webshell team",
    "email": "team@webshell.io"
  },
  "bin": {},
  "bugs": {
    "url": "https://github.com/webshell/webshell-node-sdk/issues"
  },
  "contributors": [
    {
      "name": "Arnaud Richard",
      "email": "a.richard@webshell.io"
    }
  ],
  "dependencies": {},
  "description": "The easiest way to work with APIs: Integrate APIs in minutes, better performance, easy authentications",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "d787e59d10c6121129e12aad42f56202b66fbf8d",
    "tarball": "https://registry.npmjs.org/wsh/-/wsh-0.1.4.tgz"
  },
  "engines": {
    "node": "*"
  },
  "homepage": "https://github.com/webshell/webshell-node-sdk#readme",
  "keywords": [
    "webshell",
    "wsh",
    "api",
    "apis",
    "sdk",
    "web",
    "rest",
    "auth",
    "oauth",
    "framework",
    "app"
  ],
  "main": "index",
  "maintainers": [
    {
      "name": "webshell",
      "email": "team@webshell.io"
    }
  ],
  "name": "wsh",
  "optionalDependencies": {},
  "readme": "Webshell node.js SDK\n====================\n\nThe easiest way to use Webshell in javascript using Node.js\n\n\nI - Create an app on [webshell](http://webshell.io)\n------------------------------\n\nTo use Webshell, you have to create an app in your [Dashboard](http://webshell.io/dashboard) which will generate valid API Keys.\n\nII - Setup webshell.js\n----------------------\n\nThe easier way to install this sdk is to use npm:\n\n`````\nnpm install wsh\n`````\n\nYou can also clone this repo or download the latest release, to add it into your `node_modules` folder.\n\nIII - Hello world app\n---------------------\n\nThis is a simple app using Webshell. To run this sample, you have to replace `MY_WEBSHELL_PUBLIC_KEY`, `MY_WEBSHELL_SECRET_KEY`, `MY_DOMAIN` with valid infos from the registered app.\n\n`````js\nvar wsh = require('wsh');\n\n// init webshell with authentications keys\nwsh.init({\n  key:\"MY_WEBSHELL_PUBLIC_KEY\",\n\tsecret:\"MY_WEBSHELL_SECRET_KEY\",\n\tdomain:\"MY_DOMAIN\" // e.g: mysite.com\n});\n\n// execute webshell code\nvar wshcall = wsh.exec({\n\tcode: function() {\n\t\tfor (var i in args.myarr)\n\t\t\techo(args.myarr[i]);\n\t\tdump(args);\n\t\treturn apis.tumblr.getPosts({\"base-hostname\": \"webshellnews.tumblr.com\"}, {view:null});\n\t},\n\targs: {myarr: [\"hello\", \"world\"]}\n});\n\n// set events\nwshcall.on('error', function(err) {\n\tconsole.log('wsh error:', err);\n});\nwshcall.on('process', function(data, meta) {\n\tconsole.log('processing', {\n\t\t'data': data,\n\t\t'meta': meta\n\t});\n});\nwshcall.on('success', function(res) {\n\tconsole.log('succeeded, result:', res);\n});\n\n`````\n\nPretty simple hm ?! You can call any other APIs on the platform in the same way. The javascript given in the `code` attribute of `wsh.exec()` is processed on our server and we retrieve all kind of data for you.\n\nSDK Reference\n-------------\n\n### wsh.init({key, secret, csid, domain})\nAll these parameters must be strings and are optional.\nAfter initializing your `wsh` object with the `wsh.init`, you can use `wsh.exec` with these default parameters.\n\n### wsh.exec({...}) or wsh.exec(code)\nThis method executes some code on webshell. The only required parameter (if you have init wsh before) is `code`. This can be directly the first argument, or a key of the given object.\nThe object can take these parameters:\n\n`````js\nwsh.exec({\n  code: function() {\n    // some code which have be executed by Webshell\n  },\n  args: ... // data to use in the script\n  here: {latitude, longitude} // only if you wish to manage geolocation of your users\n  \n  csid: \"...\"      //   You can manage a webshell session by its key\n  session: {}      //   or any storing object\n\n  key: \"...\"       //   These parameters are authentications informations\n  secret: \"...\"    //   and only required if you did not set them with wsh.exec\n  domain: \"...\"    //\n})\n`````\n\n*code* can be a string of the javascript, or a function with the javascript which need to be executed by Webshell.\n\n`wsh.exec` returns a WebshellCall object used to handle some events specifically to a call.\n\n### Events\n\nThe `wsh` object and the WebshellCall objects can emit several events:\n\n#### wsh.on('process', ...)\n\nWhen the sdk receives a view from the server.\n\n#### wsh.on('success', ...)\n\nWhen an execution finishes and returns a result.\n\n#### wsh.on('error', ...)\n\nWhen any error on webshell or sdk occurs.\n\n\nAbout webshell scripts\n----------------------\n\nYou can try online your Webshell code in the [API Editor](http://webshell.io/editor) and include your script using the fs object inside your webshell code (see [builtins/fs()](http://webshell.io/docs/reference/v/builtins))\n\n\nRead more information about Webshell in the [documentation](http://webshell.io/docs)\n",
  "repository": {
    "type": "git",
    "url": "git://github.com/webshell/webshell-node-sdk.git"
  },
  "version": "0.1.4"
}
